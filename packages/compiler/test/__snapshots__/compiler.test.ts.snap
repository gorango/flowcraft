// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Compiler > should compile all test fixtures 1`] = `
{
  "complexControlFlow": {
    "edges": [],
    "id": "complexControlFlow",
    "nodes": [
      {
        "id": "start",
        "uses": "start",
      },
      {
        "_sourceLocation": {
          "column": 2,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
          "line": 17,
        },
        "config": {
          "joinStrategy": "any",
        },
        "id": "loop-controller_1",
        "params": {
          "condition": "currentBatch && currentBatch.length > 0",
        },
        "uses": "loop-controller",
      },
    ],
  },
  "complexParallelFlow": {
    "edges": [],
    "id": "complexParallelFlow",
    "nodes": [
      {
        "id": "start",
        "uses": "start",
      },
    ],
  },
  "mainFlow": {
    "edges": [],
    "id": "mainFlow",
    "nodes": [
      {
        "_sourceLocation": {
          "column": 1,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/main-flow.ts",
          "line": 5,
        },
        "id": "start",
        "uses": "start",
      },
    ],
  },
  "nestedControlFlow": {
    "edges": [
      {
        "_sourceLocation": {
          "column": 3,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
          "line": 55,
        },
        "condition": "processed.needsReview",
        "source": "loop-controller_1",
        "target": "loop-controller_1",
      },
      {
        "_sourceLocation": {
          "column": 2,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
          "line": 52,
        },
        "action": "continue",
        "source": "loop-controller_1",
        "target": "loop-controller_1",
      },
      {
        "_sourceLocation": {
          "column": 2,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
          "line": 52,
        },
        "source": "loop-controller_1",
        "target": "loop-controller_1",
      },
    ],
    "id": "nestedControlFlow",
    "nodes": [
      {
        "id": "start",
        "uses": "start",
      },
      {
        "_sourceLocation": {
          "column": 2,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
          "line": 52,
        },
        "config": {
          "joinStrategy": "any",
        },
        "id": "loop-controller_1",
        "params": {
          "condition": "items.length > 0",
        },
        "uses": "loop-controller",
      },
    ],
  },
  "parallelFlow": {
    "edges": [],
    "id": "parallelFlow",
    "nodes": [
      {
        "_sourceLocation": {
          "column": 1,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/parallel-flow.ts",
          "line": 2,
        },
        "id": "start",
        "uses": "start",
      },
    ],
  },
  "simpleFlow": {
    "edges": [],
    "id": "simpleFlow",
    "nodes": [
      {
        "_sourceLocation": {
          "column": 1,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/simple-flow.ts",
          "line": 2,
        },
        "id": "start",
        "uses": "start",
      },
    ],
  },
  "simpleIfElseFlow": {
    "edges": [],
    "id": "simpleIfElseFlow",
    "nodes": [
      {
        "id": "start",
        "uses": "start",
      },
    ],
  },
  "simpleParallelFlow": {
    "edges": [],
    "id": "simpleParallelFlow",
    "nodes": [
      {
        "_sourceLocation": {
          "column": 1,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/simple-parallel.ts",
          "line": 2,
        },
        "id": "start",
        "uses": "start",
      },
    ],
  },
  "subFlow": {
    "edges": [],
    "id": "subFlow",
    "nodes": [
      {
        "_sourceLocation": {
          "column": 1,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/sub-flow.ts",
          "line": 4,
        },
        "id": "start",
        "uses": "start",
      },
    ],
  },
  "typeMismatchFlow": {
    "edges": [],
    "id": "typeMismatchFlow",
    "nodes": [
      {
        "_sourceLocation": {
          "column": 1,
          "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/type-mismatch.ts",
          "line": 2,
        },
        "id": "start",
        "uses": "start",
      },
    ],
  },
}
`;

exports[`Compiler > should compile all test fixtures 2`] = `{}`;

exports[`Compiler > should compile all test fixtures 3`] = `
"// Generated by @flowcraft/compiler


import type { NodeImplementation, WorkflowBlueprint } from 'flowcraft'

export const registry: Record<string, NodeImplementation> = {

}

export const blueprints: Record<string, WorkflowBlueprint> = {
  'complexControlFlow': {
  "id": "complexControlFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start"
    },
    {
      "id": "loop-controller_1",
      "uses": "loop-controller",
      "params": {
        "condition": "currentBatch && currentBatch.length > 0"
      },
      "config": {
        "joinStrategy": "any"
      },
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
        "line": 17,
        "column": 2
      }
    }
  ],
  "edges": []
},
  'nestedControlFlow': {
  "id": "nestedControlFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start"
    },
    {
      "id": "loop-controller_1",
      "uses": "loop-controller",
      "params": {
        "condition": "items.length > 0"
      },
      "config": {
        "joinStrategy": "any"
      },
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
        "line": 52,
        "column": 2
      }
    }
  ],
  "edges": [
    {
      "source": "loop-controller_1",
      "target": "loop-controller_1",
      "condition": "processed.needsReview",
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
        "line": 55,
        "column": 3
      }
    },
    {
      "source": "loop-controller_1",
      "target": "loop-controller_1",
      "action": "continue",
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
        "line": 52,
        "column": 2
      }
    },
    {
      "source": "loop-controller_1",
      "target": "loop-controller_1",
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/complex-control-flow.ts",
        "line": 52,
        "column": 2
      }
    }
  ]
},
  'subFlow': {
  "id": "subFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start",
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/sub-flow.ts",
        "line": 4,
        "column": 1
      }
    }
  ],
  "edges": []
},
  'mainFlow': {
  "id": "mainFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start",
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/main-flow.ts",
        "line": 5,
        "column": 1
      }
    }
  ],
  "edges": []
},
  'parallelFlow': {
  "id": "parallelFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start",
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/parallel-flow.ts",
        "line": 2,
        "column": 1
      }
    }
  ],
  "edges": []
},
  'complexParallelFlow': {
  "id": "complexParallelFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start"
    }
  ],
  "edges": []
},
  'simpleFlow': {
  "id": "simpleFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start",
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/simple-flow.ts",
        "line": 2,
        "column": 1
      }
    }
  ],
  "edges": []
},
  'simpleIfElseFlow': {
  "id": "simpleIfElseFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start"
    }
  ],
  "edges": []
},
  'simpleParallelFlow': {
  "id": "simpleParallelFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start",
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/simple-parallel.ts",
        "line": 2,
        "column": 1
      }
    }
  ],
  "edges": []
},
  'typeMismatchFlow': {
  "id": "typeMismatchFlow",
  "nodes": [
    {
      "id": "start",
      "uses": "start",
      "_sourceLocation": {
        "file": "/home/g/m/flowcraft/packages/compiler/test/fixtures/type-mismatch.ts",
        "line": 2,
        "column": 1
      }
    }
  ],
  "edges": []
}
}
"
`;

exports[`Compiler > should compile all test fixtures 4`] = `[]`;
